# Workflow for evaluting how many modules are covered by WAF tests compared to the baseline
name: .Platform - Get WAF test coverage

on:
  schedule:
    - cron: "30 4 * * *" # Every day at 4:30 am
  workflow_dispatch:

jobs:
  manage-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # - uses: tibdex/github-app-token@v2
      #   id: generate-token
      #   with:
      #     app_id: ${{ secrets.TEAM_LINTER_APP_ID }}
      #     private_key: ${{ secrets.TEAM_LINTER_PRIVATE_KEY }}
      - name: sync avm modules list
        shell: pwsh
        env:
          # GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }} # token with actions:read permissions on target repo
        run: |
          $repo = "rahalan/bicep-registry-modules"
          $LimitNumberOfRuns = 100
          $runs = gh run list --json 'number,name,databaseId,headBranch' --limit $LimitNumberOfRuns --repo $Repo | ConvertFrom-Json -Depth 100
          $uniqueRuns =@()
          # $runs | Where-Object { $_.headBranch -eq 'main' -and $_.name.StartsWith('avm.') } | Sort-Object -Property name, number -Descending | ForEach-Object {
          $runs | Where-Object { $_.headBranch -ne 'main' -and $_.name.StartsWith('avm.') } | Sort-Object -Property name, number -Descending | ForEach-Object {
            if ($uniqueRuns -notcontains $_.name) {
              $uniqueRuns += $_.name
              gh run download $_.databaseId -p 'CB.AVM.WAF*' --repo $Repo
            }
          }
      - name: Display structure of downloaded files
        shell: pwsh
        run: |
          $dir = Get-ChildItem -Filter 'CB.AVM.WAF*'
          $dir | ForEach-Object {
            $csv = Get-ChildItem -Path $_.FullName
            $tests = Import-Csv -Path $csv.FullName
            Write-Host $_.Name
            $tests | Format-Table
          }
